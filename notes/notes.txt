# Classroom-Management-Project

The final handover project is a classroom management project.
You will need to write a classroom management system using React.js, TypeScript, and Redux for the client-side and NestJS for the server-side.

The Figma is available at here [Classroom Management](https://www.figma.com/proto/OboFfLWOHqGSvxqNlrHTHa/Handover-Project?node-id=3%3A25&scaling=min-zoom&page-id=3%3A24&starting-point-node-id=3%3A25)

Make sure that you write your code according to the [Standards Document](./STANDARDS.md)

Here is a brief overview of the technical requirements:

- Make sure to store all sensitive information in environment variables.
- Use Material UI for the project.
- Use Redux for state management.
- Use React-Query(useQuery) for data fetching.
- Use TypeScript for type checking.

- Use NestJS for the server-side. done
- Use PostgreSQL for the database.done
- Use Sequelize for the ORM.         done
- Server-side logic should be divided into 3 layers, controller, service, and repository. done

- Use GitHub for version control, create a master branch that is named after your full name.
- Use branches for each feature you are working on.
- Use pull requests for merging your code.
- Use Docker for containerization.
- Deploy the project to Azure Cloud.
- Use GitHub Actions for CI/CD.

Client Specifications:

- The client should be a single-page application.
- The client should have a sidebar menu that allows you to navigate between the different screens.
- The client should have a button that allows you to change the color of the application (dark mode and light mode).
- The elements that change color should be the header bar that appears at the top of the site and all the buttons on the site.
- To change the color, use the context of react.

User Stories:

- As a user, I want to be able to create a class
    Post to '/classes'   with a class object in the body
done

- As a user, I want to be able to delete classes.
    Delete to '/classes/{id}'    dynamic id
    must validate that there are no student in the class
done

- As a user, I want to be able to view all the classes in the school.
    Get to '/classes'
done



- As a user, I want to be able to create a student.   
    Post to '/students'  with a student object in the body
done

- As a user, I want to be able to delete a student.                   
    Delete to '/students/{id}'     dynamic id
done

- As a user, I want to be able to view all the students in the school.
    Get to '/students'
done


- As a user, I want to be able to view the students in a class and the occupancy.
    each student will have a foreign key to its classroom. 
    to get all the students from a specific class i need to query over student and return if the students classroomId matches the classId
done

- As a user, I want to be able to assign a student to one class only.
    when assigning a student to a class first check if he is in a different class
done


- As a user, I want to be able to remove a student from the class.   
    set that students classroomId to NULL
done



## Validations

- A student ID needs to be a valid Israeli TAZ
front in the form


- A student cannot be created without an ID, first name, last name, and profession.
front in the form


- A class cannot be created without an ID, class name, number of places in the class.
front in the form


- A student cannot be assigned to a class if there are no places available in the class.
done


- A student can only be removed from a class if they are
  assigned to a class.
done


- A class can only be deleted if there are no students assigned to the class. 
done

- If a student is removed from a class, the number of remaining places should be updated.
done


Make sure to ask for a code review from a senior developer after you have completed the project.

Good luck!




database design

Student
id: string 
FirstName: string
LastName: string
Age: number
Profession: string
classroomId: string - foreign key to classroom


Classroom
id: string
name: string
maxOccupancy: number


i need to add env to back